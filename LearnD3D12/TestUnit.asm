//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for gInput
// {
//
//   float3 $Element;                   // Offset:    0 Size:    12
//
// }
//
// Resource bind info for gOutput
// {
//
//   float $Element;                    // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gInput                            texture  struct         r/o             t0      1 
// gOutput                               UAV  struct         r/w             u0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_resource_structured t0, 12
dcl_uav_structured u0, 4
dcl_input vThreadID.x
dcl_temps 2
dcl_thread_group 32, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- dtid
//
#line 19 "D:\repos\LearnD3D12\LearnD3D12\TestUnit.hlsl"
mov r0.x, vThreadID.x
mov r0.y, vThreadID.x
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t0.xxxx
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(4), t0.xxxx
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(8), t0.xxxx
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
store_structured u0.x, r0.x, l(0), r0.y

#line 20
ret 
// Approximately 9 instruction slots used
